name: Deploy Cloud Functions

on:
  push:
    branches:
      - main 
    paths:
    - 'backend/**'  # Trigger only on changes to the frontend folder 

env:
  GCP_REGION: us-central1   
  RUNTIME: python311
  START_TOPIC: start_ccai
  TASK_TOPIC: task_ccai
  ZIP_TOPIC: zip_ccai 
  GEMINI_MODEL: gemini-1.5-flash-001
  EXPIRATION_MIN: 260         

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        function: [1, 2, 3, 4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_JSON }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Deploy each function with its specific trigger and env variables
        run: |
          if [ ${{ matrix.function }} -eq 1 ]; then
            # Zip Task 
            echo " ################Deploying Zip Task Cloud function################"
            cd backend/zip_task
            gcloud functions deploy zip_ccai_task\
                                    --gen2 \
                                    --max-instances 2 \
                                    --region ${{ env.GCP_REGION }} \
                                    --source . \
                                    --entry-point zip_task \
                                    --runtime ${{ env.RUNTIME }} \
                                    --memory 1Gi \
                                    --timeout 1700 \
                                    --trigger-topic ${{ env.ZIP_TOPIC }} \
                                    --set-env-vars BUCKET_NAME=${{ secrets.BUCKET_NAME }},PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},FIRESTORE_DB=${{ secrets.FIRESTORE_DB }},KEY_BLOB_NAME=${{ secrets.KEY_BLOB_NAME }},EXPIRATION_MIN=${{ env.EXPIRATION_MIN }} \
                                    --service-account=${{ secrets.GCP_SA }} 
          elif [ ${{ matrix.function }} -eq 2 ]; then
            # Check Status Task 
            echo " ################Deploying Check Status Cloud function################"
            cd backend/check_status
            gcloud functions deploy check_ccai_status \
                                    --gen2 \
                                    --max-instances 2 \
                                    --region ${{ env.GCP_REGION }} \
                                    --source . \
                                    --entry-point check_status \
                                    --runtime ${{ env.RUNTIME }} \
                                    --memory 1Gi \
                                    --timeout 1801 \
                                    --trigger-http \
                                    --allow-unauthenticated \
                                    --set-env-vars ZIP_TOPIC_ID=${{ env.ZIP_TOPIC }},BUCKET_NAME=${{ secrets.BUCKET_NAME }},PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},FIRESTORE_DB=${{ secrets.FIRESTORE_DB }},SENDER_EMAIL=${{ secrets.SENDER_EMAIL }},SENDER_PWD=${{ secrets.SENDER_PWD }} \
                                    --service-account=${{ secrets.GCP_SA }} 
          elif [ ${{ matrix.function }} -eq 3 ]; then
            # Process Task 
            echo " ################Deploying Process Task Cloud function####################"
            cd backend/process_task
            gcloud functions deploy process_ccai_task\
                --gen2 \
                --max-instances 8 \
                --region ${{ env.GCP_REGION }} \
                --source . \
                --entry-point process_task \
                --runtime ${{ env.RUNTIME }} \
                --memory 1Gi \
                --timeout 541 \
                --trigger-topic ${TASK_TOPIC} \
                --set-env-vars BUCKET_NAME=${{ secrets.BUCKET_NAME }},PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},GEMINI_MODEL=${{ env.GEMINI_MODEL }},FIRESTORE_DB=${{ secrets.FIRESTORE_DB }} \
                --service-account=${{ secrets.GCP_SA }}
          else
            # Start Task 
            echo "###########################Deploy Start Task Cloud function#######################"
            cd backend/start_task
            gcloud functions deploy start_ccai_task \
                --gen2 \
                --max-instances 1 \
                --region ${{ env.GCP_REGION }} \
                --source . \
                --entry-point start_task \
                --runtime ${{ env.RUNTIME }} \
                --memory 1Gi \
                --trigger-topic ${{ env.START_TOPIC }} \
                --timeout 540 \
                --set-env-vars BUCKET_NAME=${{ secrets.BUCKET_NAME }},TASK_TOPIC_ID=${{ env.TASK_TOPIC }},PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},GEMINI_MODEL=${{ env.GEMINI_MODEL }},FIRESTORE_DB=${{ secrets.FIRESTORE_DB }} \
                --service-account=${{ secrets.GCP_SA }} 
          fi
          cd ../..
